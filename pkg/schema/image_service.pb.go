// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: image_service.proto

package schema

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoreRawImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image     *RawImage              `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id        string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoreRawImageRequest) Reset() {
	*x = StoreRawImageRequest{}
	mi := &file_image_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreRawImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRawImageRequest) ProtoMessage() {}

func (x *StoreRawImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRawImageRequest.ProtoReflect.Descriptor instead.
func (*StoreRawImageRequest) Descriptor() ([]byte, []int) {
	return file_image_service_proto_rawDescGZIP(), []int{0}
}

func (x *StoreRawImageRequest) GetImage() *RawImage {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *StoreRawImageRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StoreRawImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StoreRawImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreRawImageResponse) Reset() {
	*x = StoreRawImageResponse{}
	mi := &file_image_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreRawImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRawImageResponse) ProtoMessage() {}

func (x *StoreRawImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRawImageResponse.ProtoReflect.Descriptor instead.
func (*StoreRawImageResponse) Descriptor() ([]byte, []int) {
	return file_image_service_proto_rawDescGZIP(), []int{1}
}

type LiveStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LiveStreamRequest) Reset() {
	*x = LiveStreamRequest{}
	mi := &file_image_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveStreamRequest) ProtoMessage() {}

func (x *LiveStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_image_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveStreamRequest.ProtoReflect.Descriptor instead.
func (*LiveStreamRequest) Descriptor() ([]byte, []int) {
	return file_image_service_proto_rawDescGZIP(), []int{2}
}

type LiveStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl  string                 `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id        string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LiveStreamResponse) Reset() {
	*x = LiveStreamResponse{}
	mi := &file_image_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LiveStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveStreamResponse) ProtoMessage() {}

func (x *LiveStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_image_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveStreamResponse.ProtoReflect.Descriptor instead.
func (*LiveStreamResponse) Descriptor() ([]byte, []int) {
	return file_image_service_proto_rawDescGZIP(), []int{3}
}

func (x *LiveStreamResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *LiveStreamResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LiveStreamResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RawImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawImage  []byte `protobuf:"bytes,1,opt,name=raw_image,json=rawImage,proto3" json:"raw_image,omitempty"`
	NumRows   int32  `protobuf:"varint,2,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	NumCols   int32  `protobuf:"varint,3,opt,name=num_cols,json=numCols,proto3" json:"num_cols,omitempty"`
	ImageType int32  `protobuf:"varint,4,opt,name=image_type,json=imageType,proto3" json:"image_type,omitempty"`
}

func (x *RawImage) Reset() {
	*x = RawImage{}
	mi := &file_image_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawImage) ProtoMessage() {}

func (x *RawImage) ProtoReflect() protoreflect.Message {
	mi := &file_image_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawImage.ProtoReflect.Descriptor instead.
func (*RawImage) Descriptor() ([]byte, []int) {
	return file_image_service_proto_rawDescGZIP(), []int{4}
}

func (x *RawImage) GetRawImage() []byte {
	if x != nil {
		return x.RawImage
	}
	return nil
}

func (x *RawImage) GetNumRows() int32 {
	if x != nil {
		return x.NumRows
	}
	return 0
}

func (x *RawImage) GetNumCols() int32 {
	if x != nil {
		return x.NumCols
	}
	return 0
}

func (x *RawImage) GetImageType() int32 {
	if x != nil {
		return x.ImageType
	}
	return 0
}

var File_image_service_proto protoreflect.FileDescriptor

var file_image_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x89, 0x01, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69,
	0x61, 0x2e, 0x52, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x12, 0x4c, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7c, 0x0a, 0x08, 0x52, 0x61, 0x77, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x75,
	0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75,
	0x6d, 0x43, 0x6f, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x32, 0xa7, 0x01, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x61,
	0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61,
	0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x61, 0x77, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x4c, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x27,
	0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x70, 0x6f,
	0x65, 0x67, 0x65, 0x6c, 0x2f, 0x73, 0x65, 0x71, 0x75, 0x6f, 0x69, 0x61, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_image_service_proto_rawDescOnce sync.Once
	file_image_service_proto_rawDescData = file_image_service_proto_rawDesc
)

func file_image_service_proto_rawDescGZIP() []byte {
	file_image_service_proto_rawDescOnce.Do(func() {
		file_image_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_image_service_proto_rawDescData)
	})
	return file_image_service_proto_rawDescData
}

var file_image_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_image_service_proto_goTypes = []any{
	(*StoreRawImageRequest)(nil),  // 0: sequoia.StoreRawImageRequest
	(*StoreRawImageResponse)(nil), // 1: sequoia.StoreRawImageResponse
	(*LiveStreamRequest)(nil),     // 2: sequoia.LiveStreamRequest
	(*LiveStreamResponse)(nil),    // 3: sequoia.LiveStreamResponse
	(*RawImage)(nil),              // 4: sequoia.RawImage
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_image_service_proto_depIdxs = []int32{
	4, // 0: sequoia.StoreRawImageRequest.image:type_name -> sequoia.RawImage
	5, // 1: sequoia.StoreRawImageRequest.timestamp:type_name -> google.protobuf.Timestamp
	5, // 2: sequoia.LiveStreamResponse.timestamp:type_name -> google.protobuf.Timestamp
	0, // 3: sequoia.ImageService.StoreRawImage:input_type -> sequoia.StoreRawImageRequest
	2, // 4: sequoia.ImageService.LiveStream:input_type -> sequoia.LiveStreamRequest
	1, // 5: sequoia.ImageService.StoreRawImage:output_type -> sequoia.StoreRawImageResponse
	3, // 6: sequoia.ImageService.LiveStream:output_type -> sequoia.LiveStreamResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_image_service_proto_init() }
func file_image_service_proto_init() {
	if File_image_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_image_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_image_service_proto_goTypes,
		DependencyIndexes: file_image_service_proto_depIdxs,
		MessageInfos:      file_image_service_proto_msgTypes,
	}.Build()
	File_image_service_proto = out.File
	file_image_service_proto_rawDesc = nil
	file_image_service_proto_goTypes = nil
	file_image_service_proto_depIdxs = nil
}
